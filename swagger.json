{
    "swagger": "2.0",
    "info": {
        "description": "For ITIS 6177 Quiz 8",
        "version": "1.0.0",
        "title": "API assignment",
        "contact": {
            "email": "whlapinel@gmail.com"
        }
    },
    "host": "localhost:3000",
    "basePath": "/",
    "tags": [
        {
            "name": "Customers",
            "description": "Operations regarding customer data"
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get all customers",
                "description": "",
                "operationId": "getCustomers",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Customer"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Add a new customer",
                "description": "",
                "operationId": "addCustomer",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "customer",
                        "description": "customer",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/customers/{cust_code}": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get a customer by customer code",
                "description": "",
                "operationId": "getCustomerById",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cust_code",
                        "in": "path",
                        "description": "Code of customer to return, e.g. C00001",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update all fields for an existing customer",
                "description": "Note: customer code in body will be replaced by the code in the URL",
                "operationId": "putCustomer",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cust_code",
                        "in": "path",
                        "description": "Code of customer to return, e.g. C00030",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "customer",
                        "description": "customer",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Customers"
                ],
                "summary": "Update a single field for an existing customer",
                "description": "",
                "operationId": "patchCustomer",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cust_code",
                        "in": "path",
                        "description": "code of customer to return",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "customer",
                        "description": "customer",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }

            },
            "delete": {
                "tags": [
                    "Customers"
                ],
                "summary": "Delete a customer",
                "description": "",
                "operationId": "deleteCustomer",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "cust_code",
                        "in": "path",
                        "description": "ID of customer to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "Customer": {
            "type": "object",
            "required": [
                "CUST_NAME",
                "CUST_CITY",
                "WORKING_AREA",
                "CUST_COUNTRY",
                "GRADE",
                "OPENING_AMT",
                "RECEIVE_AMT",
                "PAYMENT_AMT",
                "OUTSTANDING_AMT",
                "PHONE_NO",
                "AGENT_CODE"
            ],
            "properties": {
                "CUST_CODE": {
                    "type": "string",
                    "example": "C00030"
                },
                "CUST_NAME": {
                    "type": "string",
                    "example": "Mark Wahlberg"
                },
                "CUST_CITY": {
                    "type": "string",
                    "example": "Boston"
                },
                "WORKING_AREA": {
                    "type": "string",
                    "example": "Boston"
                },
                "CUST_COUNTRY": {
                    "type": "string",
                    "example": "USA"
                },
                "GRADE": {
                    "type": "string",
                    "example": "1"
                },
                "OPENING_AMT": {
                    "type": "integer",
                    "format": "int32"
                },
                "RECEIVE_AMT": {
                    "type": "integer",
                    "format": "int32"
                },
                "PAYMENT_AMT": {
                    "type": "integer",
                    "format": "int32"
                },
                "OUTSTANDING_AMT": {
                    "type": "integer",
                    "format": "int32"
                },
                "PHONE_NO": {
                    "type": "string",
                    "example": "1234567890"
                },
                "AGENT_CODE": {
                    "type": "string",
                    "example": "A002"
                }
            }
        }
    }
}